<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.helidon.examples</groupId>
    <artifactId>helidon-graalvm-native-image</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <name>Helidon Graal native image example</name>

    <properties>
        <version.helidon>2.5.1</version.helidon>
        <version.plugin.dockerfile>1.4.10</version.plugin.dockerfile>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>

        <!--
        Application specific configuration
        -->
        <!-- Main class (entry point) -->
        <main.class>io.helidon.examples.graalvm.GraalVMNativeImageMain</main.class>
        <!-- Port of the application, to expose it from docker, also used
            to filter the configuration file -->
        <main.port>8099</main.port>

        <!--
        Name of the native executable
        Only used when building local native image
        -->
        <native.name>helidon-example-native-image</native.name>

        <!-- plugin versions -->
        <version.plugin.compiler>3.8.1</version.plugin.compiler>
        <version.plugin.dependency>3.0.0</version.plugin.dependency>
        <version.plugin.exec>1.6.0</version.plugin.exec>
        <version.plugin.failsafe>3.0.0-M5</version.plugin.failsafe>
        <version.plugin.helidon>3.0.0-RC3</version.plugin.helidon>
        <version.plugin.helidon-cli>3.0.0-RC3</version.plugin.helidon-cli>
        <version.plugin.jar>3.0.2</version.plugin.jar>
        <version.plugin.os>1.5.0.Final</version.plugin.os>
        <version.plugin.protobuf>0.5.1</version.plugin.protobuf>
        <version.plugin.resources>2.7</version.plugin.resources>
        <version.plugin.surefire>3.0.0-M5</version.plugin.surefire>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.helidon</groupId>
                <artifactId>helidon-bom</artifactId>
                <version>${version.helidon}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <!-- Webserver - supports string entities -->
            <groupId>io.helidon.webserver</groupId>
            <artifactId>helidon-webserver</artifactId>
        </dependency>
        <dependency>
            <!-- Support for JSON-P entities -->
            <groupId>io.helidon.media</groupId>
            <artifactId>helidon-media-jsonp</artifactId>
        </dependency>
        <dependency>
            <!-- Support for JSON-B entities -->
            <groupId>io.helidon.media</groupId>
            <artifactId>helidon-media-jsonb</artifactId>
        </dependency>
        <dependency>
            <!--
            Support for YAML configuration files
            Without this library, only .properties are supported
            -->
            <groupId>io.helidon.config</groupId>
            <artifactId>helidon-config-yaml</artifactId>
        </dependency>
        <dependency>
            <!-- Support for metrics (endpoint /metrics) -->
            <groupId>io.helidon.metrics</groupId>
            <artifactId>helidon-metrics</artifactId>
        </dependency>
        <dependency>
            <!-- Support for health checks -->
            <groupId>io.helidon.health</groupId>
            <artifactId>helidon-health</artifactId>
        </dependency>
        <dependency>
            <!-- Support for tracing - integration with Zipkin -->
            <groupId>io.helidon.tracing</groupId>
            <artifactId>helidon-tracing-zipkin</artifactId>
        </dependency>

        <dependency>
            <!-- Pre-built health checks (only memory works in native image) -->
            <groupId>io.helidon.health</groupId>
            <artifactId>helidon-health-checks</artifactId>
        </dependency>
        <dependency>
            <!-- Security integration with web server -->
            <groupId>io.helidon.security.integration</groupId>
            <artifactId>helidon-security-integration-webserver</artifactId>
        </dependency>
        <dependency>
            <!-- ABAC security provider (used for role based access) -->
            <groupId>io.helidon.security.providers</groupId>
            <artifactId>helidon-security-providers-abac</artifactId>
        </dependency>
        <dependency>
            <!-- Basic authentication security provider -->
            <groupId>io.helidon.security.providers</groupId>
            <artifactId>helidon-security-providers-http-auth</artifactId>
        </dependency>
        <dependency>
            <!-- Helidon extension for native image - required -->
            <groupId>io.helidon.integrations.graal</groupId>
            <artifactId>helidon-graal-native-image-extension</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${version.plugin.compiler}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${version.plugin.surefire}</version>
                    <configuration>
                        <useModulePath>false</useModulePath>
                        <systemPropertyVariables>
                            <java.util.logging.config.file>${project.build.outputDirectory}/logging.properties
                            </java.util.logging.config.file>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${version.plugin.failsafe}</version>
                    <configuration>
                        <useModulePath>false</useModulePath>
                        <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${version.plugin.dependency}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${version.plugin.resources}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${version.plugin.jar}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <classpathPrefix>libs</classpathPrefix>
                                <mainClass>${main.class}</mainClass>
                                <useUniqueVersions>false</useUniqueVersions>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${version.plugin.exec}</version>
                    <configuration>
                        <mainClass>${main.class}</mainClass>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.helidon.build-tools</groupId>
                    <artifactId>helidon-maven-plugin</artifactId>
                    <version>${version.plugin.helidon}</version>
                </plugin>
                <plugin>
                    <groupId>io.helidon.build-tools</groupId>
                    <artifactId>helidon-cli-maven-plugin</artifactId>
                    <version>${version.plugin.helidon-cli}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-libs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/libs</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeScope>runtime</includeScope>
                            <excludeScope>test</excludeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>native-image</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.helidon.build-tools</groupId>
                        <artifactId>helidon-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>native-image</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>io.helidon.integrations.graal</groupId>
                    <artifactId>helidon-graal-native-image-extension</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
